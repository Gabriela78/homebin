#!/bin/bash
NAME="generatePkgList"
BLURB="Output list of installed Debian packages on $HOSTNAME"
SOURCE="https://github.com/vonbrownie/homebin/blob/master/generatePkgList"
set -eu


Conf_homebin_lib() {
local LIB="https://github.com/vonbrownie/homebin/blob/master/Library.sh"
local HOMEBIN="$HOME/bin"
# A library of functions for shell scripts
local HOMEBIN_LIB="$HOMEBIN/Library.sh"
if [ -x "$HOMEBIN_LIB" ]; then
    # shellcheck source=/dev/null
    . $HOMEBIN_LIB
else
    echo -e "\n(O<"
    echo "(/)_ .: ERROR: I require '$HOMEBIN_LIB' to do my magic."
    echo "Download script from $LIB and place in $HOMEBIN."
    exit 1
fi
}


Hello_you() {
L_echo_yellow "\n$( L_penguin ) .: Howdy!"
cat << _EOF_
NAME
    $NAME
SYNOPSIS
    $NAME [ options ]
OPTIONS
    -h  print details
DESCRIPTION
    $BLURB.
DEPENDS
    bash, apt-show-versions
SOURCE
    $SOURCE

_EOF_
}


Generate_list() {
local CODENAME
    CODENAME=$( L_debian_codename )
local APT_SHOW="/usr/bin/apt-show-versions"
local PKG_LIST
    PKG_LIST="${HOSTNAME}_pkg_list.${CODENAME}.$(date +%F)"
touch "$PKG_LIST"
# Generate list of installed packages
dpkg --get-selections > "$PKG_LIST"
sed -i '/deinstall/d' "$PKG_LIST"
# Remove packages not found in the Debian archives
if [[ -x $APT_SHOW ]]; then
    local ARRAY_PNF
        ARRAY_PNF=( $($APT_SHOW | grep -v "$CODENAME" | awk -F: '{print $1}') )
    for package in "${ARRAY_PNF[@]}"
    do
        sed -i "/$package/d" "$PKG_LIST"
    done
else
    L_echo_red "\n$( L_penguin ) .: ERROR: Command '$APT_SHOW' not found."
fi
}


Run_options() {
while getopts ":h" OPT
do
    case $OPT in
        h)
            Hello_you
            exit
            ;;
        ?)
            L_echo_red "\n$( L_penguin ) .: ERROR: Invalid option '-$OPTARG'"
            exit 1
            ;;
    esac
done
}


# (O< .: Start
# (/)_
Conf_homebin_lib
Run_options "$@"
Generate_list
